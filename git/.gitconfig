##############################
# User, Signing & Commit Options
##############################
[user]
    name       = Nick Russo                        # Your full name
    email      = nijaru7@gmail.com                 # Your email address
    signingkey = /Users/nick/.ssh/id_ed25519.pub   # SSH public key used for signing

[commit]
    gpgsign    = true                              # Sign all commits
    verbose    = true                              # Display diff in commit editor

[tag]
    forceSignAnnotated = true                      # Always sign annotated tags
    gpgSign    = true                              # Sign all tags
    sort       = version:refname                   # Sort tags using version numbers

[gpg]
    format     = ssh                               # Use SSH keys for signing

##############################
# Core Settings & Performance
##############################
[core]
    editor         = $EDITOR --wait                # Use your system editor (with --wait)
    excludesFile   = ~/.gitignore                  # Global ignore file
    autocrlf       = input                         # Convert CRLF to LF on input
    safecrlf       = true                          # Prevent dangerous line-ending mix-ups
    longpaths      = true                          # Support for paths longer than 260 characters
    fsmonitor      = true                          # Enable filesystem monitoring for faster status
    preloadIndex   = true                          # Preload index into memory for better performance
    untrackedCache = true                          # Cache untracked files for speed

[feature]
    manyFiles      = true                          # Optimize for repositories with many files

##############################
# Branch, Init & Checkout Settings
##############################
[init]
    defaultBranch = main                           # Set 'main' as the default branch

[branch]
    sort          = -committerdate                 # Sort branches by latest commit

[checkout]
    defaultRemote = origin                         # Default remote when checking out
    workers       = 0                              # Use all available CPU cores

##############################
# Diff & Merge Configuration
##############################
[diff]
    algorithm        = histogram                   # Optimized diff algorithm
    colorMoved       = zebra                       # Alternate colors for moved code
    mnemonicPrefix   = true                        # Use single-letter diff mnemonics
    renames          = copies                      # Detect copies as well as renames
    wsErrorHighlight = all                         # Highlight all whitespace errors
    indentHeuristic  = true                        # Improve indent recognition in diffs
    tool             = difftastic                  # Use difftastic as external diff tool

[merge]
    conflictstyle    = zdiff3                      # Enhanced conflict resolution style
    ff               = only                        # Only allow fast-forward merges
    renameLimit      = 999999                      # Allow higher limits for renames

[interactive]
    diffFilter       = delta --color-only          # Use delta for interactive diffs

[difftool]
    prompt           = false                       # Disable confirmation prompt for difftool

[difftool "difftastic"]
    cmd              = difft "$LOCAL" "$REMOTE"    # Command to run difftastic

[pager]
    difftool         = true                        # Enable pager when running difftool

##############################
# Remote Operations
##############################
[fetch]
    parallel         = 0                           # Utilize all CPU cores for fetching
    prune            = true                        # Prune deleted branches on fetch
    pruneTags        = true                        # Remove deleted tags on fetch
    writeCommitGraph = true                        # Optimize commit graph writing
    recurseSubmodules = on-demand                  # Update submodules as needed
    all              = true                        # Fetch from all remotes

[pull]
    rebase           = true                        # Use rebase instead of merge when pulling
    ff               = only                        # Only fast-forward; fail otherwise

[push]
    autoSetupRemote  = true                        # Auto-detect upstream branch on push
    default          = current                     # Push current branch with same name on remote
    followTags       = true                        # Push tags along with commits

[url "git@github.com:"]
    insteadOf       = https://github.com/          # Use SSH instead of HTTPS for GitHub

[url "https://github.com/"]
    insteadOf       = git@github.com:mise-en/      # Use HTTPS for the Mise-en-place repo

##############################
# Rebase & History Options
##############################
[rebase]
    autoStash         = true                       # Automatically stash changes during rebase
    autoSquash        = true                       # Squash fixups automatically
    updateRefs        = true                       # Update dependent branch refs
    missingCommitsCheck = error                    # Error if commits are missing

[rerere]
    enabled           = true                       # Remember resolution of conflicts
    autoupdate        = true                       # Automatically apply recalled resolutions

##############################
# Maintenance, GC & Pack Settings
##############################
[pack]
    threads         = 0                            # Use all cores for packing
    deltaCacheSize  = 256m                         # Set delta cache size for compression
    packSizeLimit   = 256m                         # Limit pack file size

[maintenance]
    auto            = false                        # Disable automatic maintenance
    strategy        = incremental                  # Use incremental maintenance strategy
    gc              = true                         # Enable garbage collection

[gc]
    auto            = true                         # Enable automatic garbage collection
    autoPackLimit   = 64                           # Pack objects after reaching 64 packs
    pruneExpire     = 2.weeks.ago                  # Expire objects older than two weeks
    autoDetach      = true                         # Detach garbage collection process

##############################
# Delta & Git LFS Settings
##############################
[delta]
    navigate              = true                   # Enable n/N to navigate diff sections
    light                 = false                  # Dark mode (set true for light layouts)
    side-by-side          = false                  # Use unified diff view instead of side-by-side
    line-numbers          = true                   # Show line numbers in diff output
    syntax-theme          = ansi                   # Enable ANSI-based syntax highlighting
    file-style            = bold yellow            # Use bold yellow for file headers
    plus-style            = syntax "#003800"       # Style for added lines
    minus-style           = syntax "#3f0001"       # Style for removed lines
    zero-style            = syntax                 # Style for context lines
    whitespace-error-style = reverse               # Reverse video for whitespace errors

[filter "lfs"]
    clean        = git-lfs clean -- %f             # Clean filter command for Git LFS
    smudge       = git-lfs smudge -- %f            # Smudge filter command for Git LFS
    process      = git-lfs filter-process          # Filter process for Git LFS
    required     = true                            # Enforce the use of Git LFS

##############################
# Helper & Alias Configuration
##############################
[help]
    autocorrect  = prompt                          # Prompt before auto-correcting typos

[alias]
    cleanup      = "!git-clean"                    # Run custom branch cleanup script
    br           = "!gbr"                          # Branch management alias
    clone-cd     = "!clone"                        # Shortcut to clone and change directory

    s            = "status -sb"                    # Short status command
    l            = "log --oneline -n 10"           # One-line log view of last 10 commits

    lb           = "!git for-each-ref --sort='-authordate' --format='%(authordate)%09%(objectname:short)%09%(refname)' refs/heads | sed -e 's-refs/heads/--'"
                                                   # List branches sorted by date

    undo         = "reset --soft HEAD^"            # Undo last commit (soft reset)
    amend        = "commit --amend --no-edit"      # Amend last commit without changing message

    staged       = "diff --cached"                 # Show staged diff
    unstage      = "reset HEAD --"                 # Unstage changes

    wip          = "!git add -A && git commit -m 'WIP'"
                                                   # Quick commit for work-in-progress
    unwip        = "!git log -n 1 | grep -q -c WIP && git reset HEAD~1"
                                                   # Undo the last WIP commit

    dft          = "difftool"                      # Shortcut for launching difftool

##############################
# Credential Helpers & Local Overrides
##############################
[credential "https://github.com"]
    helper       = !/opt/homebrew/bin/gh auth git-credential   # GitHub credential via gh

[credential "https://gist.github.com"]
    helper       = !/opt/homebrew/bin/gh auth git-credential   # Gist credential via gh

[include]
    path         = ~/.gitconfig.local              # Include additional local configuration overrides