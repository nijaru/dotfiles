#!/usr/bin/env zsh

# Source git aliases
z4h source ~/.aliases-git

###############################################################################
# Editor Aliases
###############################################################################
alias e="$EDITOR"
alias z="zed"
alias z.="zed ."
alias c="code"
alias c.="code ."
alias v="nvim"
alias v.="nvim ."

###############################################################################
# Modern CLI Replacements
###############################################################################

# File Operations & Viewing
# ------------------------
command_exists bat &&
    alias cat="bat --plain --paging=never" # Enhanced file viewing

# Enhanced ls with eza
if command_exists eza; then
    alias ls="eza --icons --git"      # Basic listing
    alias l="eza -l --icons --git"    # Long listing
    alias ll="eza -l --icons --git"   # Detailed listing
    alias la="eza -a --icons --git"   # Show hidden files
    alias lla="eza -la --icons --git" # Long with hidden
    alias lt="eza -T --icons --git"   # Tree listing
    alias tree="eza --tree --icons"   # Tree view
fi

# Search and Navigation
# --------------------
command_exists rg && alias grep="rg" # Better text search
command_exists fd && alias find="fd" # Better file search
command_exists fzf &&
    alias preview="fzf --preview 'bat --color=always {}'" # Interactive preview

# System Monitoring
# ----------------
command_exists duf && alias df="duf"            # Better disk usage
command_exists dust && alias du="dust"          # Better dir usage
command_exists procs && alias ps="procs"        # Better process view
command_exists btop && alias top="btop"         # Better system monitor
command_exists htop && alias htop="htop --tree" # Tree process view

# File Comparison & Network
# ------------------------
command_exists delta && alias diff="delta" # Better diff tool
command_exists doggo && alias dig="doggo"  # Better DNS lookup
command_exists gping && alias ping="gping" # Visual ping tool

###############################################################################
# Safe File Operations
###############################################################################

# Core Operations
alias rm="rm -i"        # Safe removal
alias rmd="rmdir"       # Remove directory
alias rmrf="rm -rf"     # Force removal
alias cp="cp -ia"       # Safe copy
alias mv="mv -i"        # Safe move
alias mkdir="mkdir -pv" # Recursive mkdir

# Advanced Operations
alias cpv="rsync -ah --info=progress2"                       # Copy with progress
alias mvv="rsync -ah --remove-source-files --info=progress2" # Move with progress
alias symlink="ln -sf"                                       # Force symlink

###############################################################################
# Directory Navigation
###############################################################################

# Quick Traversal
alias ..="cd .."         # Up one level
alias ...="cd ../.."     # Up two levels
alias ....="cd ../../.." # Up three levels
alias -- -="cd -"        # Previous directory
alias d='dirs -v'        # Directory stack

# Common Directories
alias dl="cd ~/Downloads"  # Go to Downloads
alias doc="cd ~/Documents" # Go to Documents
alias dt="cd ~/Desktop"    # Go to Desktop
alias p="cd ~/Projects"    # Go to Projects
alias ghub="cd ~/github"   # Go to GitHub

###############################################################################
# Python Development
###############################################################################
if command_exists python3; then
    # Basic Python commands
    alias py="python3"         # Python shorthand
    alias python="python3"     # Force Python 3
    alias pip="python3 -m pip" # Safe pip usage
    alias pym="python3 -m"     # Run Python modules
    alias pyv="python3 -V"     # Show Python version

    # Virtual Environment
    alias venv="python3 -m venv"         # Create venv
    alias va="source .venv/bin/activate" # Activate venv
    alias vd="deactivate"                # Deactivate venv
    alias ve="python3 -m venv .venv"     # Create .venv in current directory

    # Package Management
    alias pipi="pip install"                    # Install package
    alias pipie="pip install -e ."              # Install current package in editable mode
    alias pipir="pip install -r"                # Install from requirements
    alias pipu="pip install --upgrade"          # Upgrade package
    alias pipun="pip uninstall"                 # Uninstall package
    alias pipf="pip freeze"                     # Show installed packages
    alias pipfr="pip freeze > requirements.txt" # Generate requirements.txt
    alias pipcheck="pip check"                  # Verify dependencies
    alias pipoutdated="pip list --outdated"     # List outdated packages

    # Testing and Quality
    alias pytest="python -m pytest"                     # Run tests
    alias pytestr="python -m pytest --html=report.html" # Generate HTML test report
    alias pytestc="python -m pytest --cov"              # Run tests with coverage
    alias mypy="python -m mypy"                         # Type checking
    alias lint="ruff check"                             # Fast Python linter
    alias black="python -m black"                       # Code formatting
    alias isort="python -m isort"                       # Import sorting

    # Development Tools
    alias pydoc="python -m pydoc"                   # Python documentation
    alias pyprof="python -m cProfile -s cumulative" # Basic profiling
    alias pyrepl="python -m IPython"                # Enhanced Python REPL
    alias jupyter="python -m jupyter notebook"      # Start Jupyter notebook
    alias jupyterlab="python -m jupyter lab"        # Start JupyterLab
fi

###############################################################################
# Go Development
###############################################################################
if command_exists go; then
    # Build and Run
    alias gr="go run"               # Run package
    alias grun="go run ."           # Run current package
    alias gb="go build"             # Build package
    alias gbd="go build -race"      # Build with race detector
    alias gi="go install"           # Install package
    alias gct="go clean -testcache" # Clean test cache

    # Testing
    alias gt="go test"                                    # Run tests
    alias gta="go test ./..."                             # Test all packages
    alias gtv="go test -v ./..."                          # Verbose testing
    alias gtc="go test -cover ./..."                      # Test coverage
    alias gtb="go test -bench=."                          # Run benchmarks
    alias gtr="go test -race ./..."                       # Test with race detector
    alias gtcf="go test -coverprofile=coverage.out ./..." # Coverage file
    alias gtw="gotestsum --watch"                         # Watch tests (requires gotestsum)

    # Dependencies
    alias gm="go mod"           # Mod shorthand
    alias gmt="go mod tidy"     # Tidy modules
    alias gmv="go mod verify"   # Verify dependencies
    alias gmd="go mod download" # Download dependencies
    alias gmu="go get -u ./..." # Update dependencies
    alias gmw="go mod why"      # Why is module needed
    alias gme="go mod edit"     # Edit go.mod
    alias gmg="go mod graph"    # Module dependency graph

    # Tools and Analysis
    alias gf="go fmt ./..."         # Format code
    alias gfi="go fix ./..."        # Fix deprecated syntax
    alias glint="golangci-lint run" # Run linter
    alias gv="go vet ./..."         # Run vet
    alias ggen="go generate ./..."  # Generate code
    alias gdoc="godoc -http=:6060"  # Start godoc server

    # Development Tools
    # alias gw="gopls"         # Language server
    alias gwi="go work init" # Initialize workspace
    alias gwa="go work add"  # Add module to workspace
    alias gws="go work sync" # Sync workspace
    alias gwe="go work edit" # Edit workspace

    # Version and Environment
    alias gv="go version"       # Show Go version
    alias genv="go env"         # Show Go environment
    alias gpath="go env GOPATH" # Show GOPATH
    alias groot="go env GOROOT" # Show GOROOT
fi

###############################################################################
# Ruby Development
###############################################################################
if command_exists ruby; then
    # Basic Ruby commands
    alias rb="ruby"     # Ruby shorthand
    alias rbi="irb"     # Interactive Ruby
    alias rbv="ruby -v" # Ruby version

    # Gem commands
    alias gemi="gem install"     # Install a gem
    alias gemu="gem uninstall"   # Uninstall a gem
    alias geml="gem list"        # List installed gems
    alias gemr="gem rdoc"        # Generate RDoc
    alias gemt="gem test"        # Run tests for gem
    alias gemo="gem outdated"    # Show outdated gems
    alias gemup="gem update"     # Update all gems
    alias gems="gem search -r"   # Search for gems
    alias gemp="gem pristine"    # Reset gems to pristine condition
    alias gemb="gem build"       # Build gem from gemspec
    alias gemc="gem cleanup"     # Clean old gem versions
    alias gemv="gem env version" # Show gem version
    alias gemh="gem help"        # Show gem help

    # Bundle commands
    alias rbb="bundle"           # Bundle shorthand
    alias rbbe="bundle exec"     # Bundle exec
    alias rbbi="bundle install"  # Install dependencies
    alias rbbu="bundle update"   # Update dependencies
    alias rbbo="bundle outdated" # Show outdated gems
    alias rbbc="bundle clean"    # Clean old gems
    alias rbbp="bundle package"  # Package gems
    alias rbbck="bundle check"   # Verify dependencies
    alias rbbl="bundle list"     # List gems
    alias rbbop="bundle open"    # Open gem source
    alias rbbin="bundle info"    # Show gem info

    # Rails commands
    alias rs="rails server"                # Start Rails server
    alias rc="rails console"               # Rails console
    alias rg="rails generate"              # Rails generate
    alias rgm="rails generate migration"   # Generate migration
    alias rr="rails routes"                # Show routes
    alias rdb="rails db"                   # Database tasks
    alias rdbm="rails db:migrate"          # Run migrations
    alias rdbs="rails db:seed"             # Seed database
    alias rdbc="rails db:create"           # Create database
    alias rdbd="rails db:drop"             # Drop database
    alias rdbr="rails db:rollback"         # Rollback migration
    alias rdbrb="rails db:rollback STEP=1" # Rollback one step

    # Testing
    alias rt="rails test"                    # Run tests
    alias rts="rails test:system"            # Run system tests
    alias spec="rspec"                       # Run RSpec tests
    alias rsf="rspec --format documentation" # Formatted RSpec output
    alias rsp="rspec --profile"              # Show slow examples
    alias rsw="rspec --profile --warnings"   # Show warnings

    # Development Tools
    alias rubocop="bundle exec rubocop"       # Ruby linter
    alias rubo="bundle exec rubocop -a"       # Auto-correct Ruby style
    alias ruboa="bundle exec rubocop -A"      # Auto-correct aggressive
    alias solargraph="bundle exec solargraph" # Ruby language server
    alias fasterer="bundle exec fasterer"     # Speed suggestions
    alias brakeman="bundle exec brakeman"     # Security scanner
    alias rbpry="pry -r ./config/environment" # Rails console with Pry
fi

###############################################################################
# Rust Development
###############################################################################
if command_exists cargo; then
    # Basic Cargo commands
    alias cb="cargo build" # Build project
    alias cr="cargo run"   # Run project
    alias ct="cargo test"  # Run tests
    alias cc="cargo check" # Check project
    alias cn="cargo new"   # Create new project

    # Development
    alias cw="cargo watch"            # Watch for changes
    alias cwr="cargo watch -x run"    # Watch and run
    alias cwt="cargo watch -x test"   # Watch and test
    alias cbr="cargo build --release" # Build for release
    alias crr="cargo run --release"   # Run release build

    # Dependencies
    alias cu="cargo update"   # Update dependencies
    alias ca="cargo add"      # Add dependency
    alias crm="cargo remove"  # Remove dependency
    alias co="cargo outdated" # Show outdated deps

    # Tools and Analysis
    alias cf="cargo fmt"           # Format code
    alias cfc="cargo fmt --check"  # Check formatting
    alias cl="cargo clippy"        # Lint code
    alias cla="cargo clippy --all" # Lint all targets
    alias cdo="cargo doc --open"   # Generate and view docs
    alias cexp="cargo expand"      # Expand macros

    # Project Maintenance
    alias ccl="cargo clean"         # Clean build artifacts
    alias cv="cargo verify-project" # Verify manifest
    alias ct="cargo tree"           # Display dependency tree
    alias cbench="cargo bench"      # Run benchmarks
fi

###############################################################################
# JavaScript Development
###############################################################################
if command_exists node; then
    # Node and NPM basics
    alias n="node"                     # Node.js shorthand
    alias nv="node -v"                 # Node.js version
    alias nr="npm run"                 # Run npm script
    alias ni="npm install"             # Install dependencies
    alias nid="npm install --save-dev" # Install dev dependency
    alias nu="npm update"              # Update dependencies
    alias nout="npm outdated"          # Show outdated packages
    alias nrm="npm remove"             # Remove package

    # Package management
    alias nci="npm ci"        # Clean install
    alias nau="npm audit"     # Security audit
    alias naf="npm audit fix" # Fix security issues
    alias nl="npm list"       # List packages
    alias nlg="npm list -g"   # List global packages

    # Development and Testing
    alias nst="npm test"       # Run tests
    alias nrb="npm run build"  # Build project
    alias nrd="npm run dev"    # Run dev server
    alias nrl="npm run lint"   # Run linter
    alias nrf="npm run format" # Run formatter
fi

# Yarn commands (if available)
if command_exists yarn; then
    alias y="yarn"             # Yarn shorthand
    alias ya="yarn add"        # Add dependency
    alias yad="yarn add --dev" # Add dev dependency
    alias yr="yarn remove"     # Remove package
    alias yu="yarn upgrade"    # Upgrade packages
    alias yd="yarn dev"        # Run dev server
    alias yb="yarn build"      # Build project
    alias yt="yarn test"       # Run tests
    alias yl="yarn lint"       # Run linter
fi

# PNPM commands (if available)
if command_exists pnpm; then
    alias p="pnpm"          # PNPM shorthand
    alias pi="pnpm install" # Install dependencies
    alias pa="pnpm add"     # Add dependency
    alias pad="pnpm add -D" # Add dev dependency
    alias pr="pnpm remove"  # Remove package
    alias pu="pnpm update"  # Update packages
    alias pd="pnpm dev"     # Run dev server
    alias pb="pnpm build"   # Build project
    alias pt="pnpm test"    # Run tests
    alias pl="pnpm lint"    # Run linter
fi

###############################################################################
# Docker Compose Operations
###############################################################################
alias dc="docker compose"          # Basic compose command
alias dcu="docker compose up -d"   # Start containers in background
alias dcd="docker compose down"    # Stop and remove containers
alias dcl="docker compose logs -f" # Follow container logs
alias dcp="docker compose pull"    # Pull latest images
alias dcr="docker compose restart" # Restart containers
alias dcs="docker compose stop"    # Stop containers
alias dcps="docker compose ps"     # List containers
alias dcb="docker compose build"   # Build containers
alias dce="docker compose exec"    # Execute command in container
alias dccp="docker compose cp"     # Copy files between host and containers

# Development helpers
alias dcdev="docker compose -f docker-compose.yml -f docker-compose.dev.yml"
alias dcprod="docker compose -f docker-compose.yml -f docker-compose.prod.yml"

# Cleanup commands
alias dcrm="docker compose rm -f"                              # Remove stopped containers
alias dcprune="docker compose down --volumes --remove-orphans" # Full cleanup
